plugins {
    id 'org.springframework.boot' version '2.1.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
}

group 'com.fanglin.dubbo'
version '1.0.0'

apply from: rootProject.projectDir.path + '/ext.gradle'
apply plugin: 'java-library'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'maven-publish'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// JVM 版本号要求
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
}

dependencies {
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
    testAnnotationProcessor "org.projectlombok:lombok"
    testAnnotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    testCompileOnly("org.projectlombok:lombok")
    api("org.projectlombok:lombok")

    implementation("com.alibaba:dubbo-registry-nacos:${dubboRegistryNacosVersion}")
    implementation("com.alibaba.boot:dubbo-spring-boot-starter:${dubboStarterVersion}")
    implementation("com.alibaba:dubbo:${alibabaDubboVersion}")
    implementation("com.fanglin.dubbo:api:1.0.0") {
        transitive false
    }
    implementation("com.fanglin.common:common:1.0.0") {
        transitive false
    }
    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation("org.springframework.boot:spring-boot-starter-undertow") {
        exclude module: 'undertow-websockets-jsr'
    }
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.session:spring-session-data-redis")
    implementation("redis.clients:jedis:${jedisVersion}")
    implementation("io.netty:netty-all")
}
publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}